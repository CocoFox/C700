;Table Assembler compatable SPC700 program
;Test of SPC based sound effects using WAV2BRR
;(C) 1999 Realtime Simulations and Roleplaying games, Inc
;
; When loaded into the SPC, will play whatever sample is loaded after it
;
; So, on the 65816 side, this chunk of code is loaded into the SPC700 at $400
; The sound sample to be played is loaded into $500
; The sound sample is in BRR format, as specified in the SPC700 documentation
; BRR files can be generated by WAV2BRR or by ripping data from other ROMs
;
; Be sure to pad this to 256 bytes!!

.include "defines.i"


.org $0400

        ;First order of business is to setup the DSP registers
        ;We'll start with the soundsample directory
        mov a,#$5D
        mov $F2,a
        mov a,#$02
        mov $F3,a       ;Set directory to $0200
        mov a,#$00
        mov $0200,a
        mov $0202,a    ;loop point is also set to $0500, so
        mov a,#$05      ; sample repeats if loop bit in sample is set
        mov $0201,a
        mov $0203,a     ;Point directory entry zero to $0500

        ;Now we'll do a loop that pokes the soundtable into
        ;DSP registers.  When a negative register is hit, the
        ;loop will terminate.  Then, the CPU will halt.

        mov x,#$00
ExecSound:
        mov a,!soundtable+x
        bmi EndSound
        mov $F2,a
        inc x
        mov a,!soundtable+x
        mov $F3,a
        inc x
        bra ExecSound
EndSound:
        bra EndSound


        ;The following table is "poked" into the sound DSP using the
        ;"ExecSound" subroutine.
        ;Take care that the table not exceed 256 bytes (maximum X index)
.org $0460

soundtable:
        .db $00
        .db $7F           ;Left volume (V1) to max
        .db $01
        .db $7F           ;Right volume (V1) to max
        .db $02
        .db $00
        .db $03
        .db $10           ;Pitch is 1:2 of original

        .db $04
        .db $00           ;Sample #0
        .db $05
        .db $E8
        .db $06
        .db $60           ;ADSR Settings
        .db $0C
        .db $7F           ;Main volume left

        .db $1C
        .db $7F           ;Main volume right
        .db $2C
        .db $00           ;Echo volume left
        .db $3C
        .db $00           ;Echo volume right
        .db $4D
        .db $00           ;Echo off

        .db $3D
        .db $00           ;Noise off
        .db $2D
        .db $00           ;Modulation off
        .db $07
        .db $7F           ;Gain off
        .db $6C
        .db $20           ;Mute off, echo off


        .db $4C
        .db $01           ;Key On for voice 1

        .db $FF           ;Terminator Byte (do not remove!)

endsoundtable:

.org $1000
.incbin "output.brr"
